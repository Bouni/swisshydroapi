---
- hosts: all
  become: yes
  tasks:

    - name: Set timezone to Europe/Zurich
      timezone:
        name: Europe/Zurich

    - name: Upgrade packages
      apt:
        upgrade: dist

    # Install packages

    - name: Install nginx web server
      apt: name=nginx state=latest update_cache=true

    - name: install letsencrypt
      apt: name=letsencrypt state=latest
    
    - name: Install pip
      apt: name=python3-pip state=latest update_cache=true

    # Clone repo

    - name: clone git repo
      git:
        repo: 'https://github.com/Bouni/swisshydroapi.git'
        dest: /tmp/swisshydroapi
        force: yes

    # Setup webserver

    - name: create letsencrypt directory
      file: name=/var/www/letsencrypt state=directory

    - name: find enabled nginx configs
      find:
        paths: /etc/nginx/sites-enabled
        patterns: '*'
      register: enabled_sites

    - name: Remove nginx configs
      file:
        path: "{{ item['path'] }}"
        state: absent
      with_items: "{{ enabled_sites['files'] }}"

    - name: Install system nginx config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Install http config
      template:
        src: templates/http.conf.j2
        dest: /etc/nginx/sites-available/swisshydroapi.http.conf

    - name: Create a symbolic link for http conf
      file:
        src: /etc/nginx/sites-available/swisshydroapi.http.conf
        dest: /etc/nginx/sites-enabled/swisshydroapi.http.conf
        owner: www-data
        group: www-data
        state: link
    
    - name: Reload nginx to activate letsencrypt site
      service: name=nginx state=restarted

    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ swisshydroapi_email }} --agree-tos -d {{ swisshydroapi_domain }}
      args:
        creates: /etc/letsencrypt/live/{{ swisshydroapi_domain }}

    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem
    
    - name: Install https config
      template:
        src: templates/https.conf.j2
        dest: /etc/nginx/sites-available/swisshydroapi.https.conf
    
    - name: Create a symbolic link for https conf
      file:
        src: /etc/nginx/sites-available/swisshydroapi.https.conf
        dest: /etc/nginx/sites-enabled/swisshydroapi.https.conf
        owner: www-data
        group: www-data
        state: link

    - name: Reload nginx to activate letsencrypt site
      service: name=nginx state=restarted

    - name: Add letsencrypt cronjob for cert renewal
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ swisshydroapi_email }} --agree-tos -d {{ swisshydroapi_domain }} && service nginx reload

    # install swisshydroapi app

    - name: Ensures /srv/swisshydroapi dir exists
      file: 
        path: /srv/swisshydroapi 
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy app.py to /srv/swisshydroapi/
      copy:
        src: /tmp/swisshydroapi/app.py 
        dest: /srv/swisshydroapi/app.py
        remote_src: yes
        owner: www-data
        group: www-data
        mode: '0755'
    
    - name: Ensures /srv/swisshydroapi/docs dir exists
      file: 
        path: /srv/swisshydroapi/docs 
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
    
    - name: Copy docs to /srv/swisshydroapi/
      copy:
        src: /tmp/swisshydroapi/docs/docs.html 
        dest: /srv/swisshydroapi/docs/docs.html
        remote_src: yes
        owner: www-data
        group: www-data
        mode: '0755'
    
    - name: Copy service file to /etc/systemd/system
      copy:
        src: /tmp/swisshydroapi/swisshydroapi.service
        dest: /etc/systemd/system/swisshydroapi.service
        remote_src: yes

    - name: Install virtualenv
      pip:
        executable: pip3 
        name: virtualenv
        state: present

    - name: Install python requirements
      pip:
        virtualenv_python: python3
        requirements: /tmp/swisshydroapi/requirements.txt 
        virtualenv: /srv/swisshydroapi/venv

    - name: Replace username with prompted value
      lineinfile: 
        path: /tmp/swisshydroapi/bafu/bafu.sh
        regexp: '/usr/bin/curl'
        line: '/usr/bin/curl -o /srv/swisshydroapi/hydroweb.xml --anyauth --user "{{ bafuuser }}":"{{ bafupass }}" https://www.hydrodata.ch/data/plc/xml/hydroweb.xml'

    - name: Copy BAFU download timer to /etc/systemd/system
      copy:
        src: /tmp/swisshydroapi/bafu/bafu.timer
        dest: /etc/systemd/system/bafu.timer
        remote_src: yes
    
    - name: Copy BAFU download service file to /etc/systemd/system
      copy:
        src: /tmp/swisshydroapi/bafu/bafu.service
        dest: /etc/systemd/system/bafu.service
        remote_src: yes
    
    - name: Copy BAFU download script file to /srv/swisshydroapi
      copy:
        src: /tmp/swisshydroapi/bafu/bafu.sh
        dest: /srv/swisshydroapi/bafu.sh
        remote_src: yes


    - name: Enable and start swisshydroapi.service
      systemd:
        name: swisshydroapi.service
        state: started
        enabled: yes
        masked: no
        daemon_reload: yes
    
    - name: Enable and start bafu.timer
      systemd:
        name: bafu.timer
        state: started
        enabled: yes
        masked: no
        daemon_reload: yes

  vars_prompt:
    
    - name: "bafuuser"
      prompt: "Enter BAFU username"
    
    - name: "bafupass"
      prompt: "Enter BAFU password"
